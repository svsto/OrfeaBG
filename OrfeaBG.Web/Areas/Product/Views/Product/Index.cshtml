@model ProductListingViewModel
@using System.Text.RegularExpressions
@{
    ViewData["Title"] = "All Products";
}
<h1>@ViewData["Title"]</h1>
<p><a asp-action="Add" class="btn btn-success">Add Product</a></p>
<table class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>
                Title
            </th>
            <th>
                Image
            </th>
            <th>
                Content
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>
                    @product.Title
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(product.ImageName))
                    {
                        <img src="~/products/@product.ImageName" width="65" class="img-responsive">
                    }
                </td>
                <td>
                    @{
                        product.Content = Regex.Replace(product.Content, "<.*?>", String.Empty);
                        var contentLenght = product.Content.Length > 100 ? 100 : product.Content.Length;
                    }
                    @Html.Raw(product.Content.Substring(0, contentLenght))
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@product.Id">edit</a><br />
                    <a asp-action="Deteil" asp-route-id="@product.Id">view</a><br />
                    <a asp-action="Delete" asp-route-id="@product.Id">delete</a><br />
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalProducts > Model.Products.Count())
{
    <ul class="pagination">
        <li class="@(Model.CurrentPage == 1 ? "disabled" : string.Empty)">
            <a asp-route-page="@Model.PreviousPage"
               aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @{
            int totalPages = (int)Math.Ceiling((double)Model.TotalProducts / WebConstants.PageSize);
        }
        @for (int p = 0; p < totalPages; p++)
        {
            <li>
                <a asp-route-page="@(p+1)">
                    @(p+1)
                </a>
            </li>
        }
        <li class="@(Model.CurrentPage == Model.TotalPages ? "disabled" : string.Empty)">
            <a asp-route-page="@Model.NextPage"
               aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
}